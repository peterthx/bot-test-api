name: terraform-robot-ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Robot + libs
        run: |
          python -m pip install --upgrade pip
          pip install robotframework robotframework-requests

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply (start httpbin)
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Read BASE_URL from terraform output
        id: tfout
        working-directory: terraform
        run: echo "BASE_URL=$(terraform output -raw base_url)" >> $GITHUB_OUTPUT

      - name: Wait for service to be ready
        run: |
          for i in {1..15}; do
            if curl -sSf ${BASE_URL:-http://localhost:8080}/get >/dev/null; then
              echo "Service is up"
              exit 0
            fi
            echo "Waiting for service..."
            sleep 2
          done
          echo "Service not ready in time" && exit 1
        env:
          BASE_URL: ${{ steps.tfout.outputs.BASE_URL }}

      - name: Run Robot Tests
        run: |
          robot --outputdir results tests/
        env:
          BASE_URL: ${{ steps.tfout.outputs.BASE_URL }}

      - name: Upload Robot Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: results/

      - name: Terraform Destroy
        if: always()
        working-directory: terraform
        run: terraform destroy -auto-approve
